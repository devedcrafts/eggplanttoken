{"version":3,"sources":["document.pdf","rainingeggplantsplain.svg","eggplantlogo.svg","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["App","networks","bsc","chainId","Number","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","useState","nextAirdrop","setNextAirdrop","donationAmount","setDonationAmount","donations","setDonations","Web3","require","providers","HttpProvider","eth","Contract","Eggplant","abi","getReadContract","readContract","writeContract","setWriteContract","account","setAccount","Web3Modal","providerOptions","theme","web3Modal","doClose","provider","close","console","log","refreshNextAirdrop","a","methods","getNextAirdrop","call","submitDonation","event","preventDefault","alert","qq","donate","send","from","value","error","refreshDonations","getDonations","newDonations","setSubscriptions","on","accounts","connectToWallet","connect","request","method","params","web3","getAccounts","checkAirdropAvailability","result","airdrop","useEffect","document","title","className","rel","href","src","eggplantlogo","style","Pdf","target","class","onClick","navigator","clipboard","writeText","rainingeggplants","onSubmit","type","step","min","required","onChange","Box","sx","width","height","maxWidth","bgcolor","border","itemData","reverse","itemSize","itemCount","length","data","index","item","date","Moment","unix","format","adjustedAmount","amount","ListItem","component","disablePadding","ListItemText","primary","donor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"kp9zBAAe,MAA0B,qCCA1B,MAA0B,kDCA1B,MAA0B,yC,2CCuT1BA,MAxSf,WAEA,IAAMC,EAAW,CACfC,IAAK,CACHC,QAAQ,KAAD,OAAOC,OAAO,IAAIC,SAAS,KAClCC,UAAW,8BACXC,eAAgB,CACdC,KAAM,6BACNC,OAAQ,MACRC,SAAU,IAEZC,QAAS,CACP,oCACA,oCACA,oCACA,oCACA,mCACA,mCACA,mCACA,mCACA,oCACA,oCACA,oCACA,oCACA,gCAEFC,kBAAmB,CAAC,yBA+DtB,EAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwCN,mBAhDhB,WACtB,IAAMO,EAAOC,EAAQ,KAGrB,OAAO,IAFM,IAAID,EAAK,IAAIA,EAAKE,UAAUC,aAAa,0CAEtCC,IAAIC,UAASC,EAASC,IAAK,8CA4CIC,IAAjD,mBAAOC,EAAP,KACA,GADA,KAC0ChB,mBAAS,OAAnD,mBAAOiB,EAAP,KAAsBC,EAAtB,KACA,EAA8BlB,mBAAS,MAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KACA,EAAkCpB,mBAff,IAAIqB,IAAU,CACzBC,gBA5BiB,CACnBC,MAAO,WAyCb,mBAAOC,EAAP,KAIMC,GAJN,KAIgB,SAACC,GAEXA,EAASC,OACXD,EAASC,QAEXC,QAAQC,IAAI,mBACZT,EAAW,MACXF,EAAiB,QAIbY,EAAkB,uCAAG,sBAAAC,EAAA,kEACzB7B,EADyB,SACJc,EAAagB,QAAQC,iBAAiBC,OADlC,iCAC4C,GAAM,IADlD,yEAAH,qDAKlBC,EAAc,uCAAG,WAAMC,GAAN,eAAAL,EAAA,yDACrBK,EAAMC,iBAES,MAAXlB,EAHiB,uBAIjBmB,MAAM,kCAJW,mDAQArB,EARA,cAQXsB,EARW,iBASXA,EAAGP,QAAQQ,SAASC,KAAK,CAACC,KAAMvB,EAASwB,MAAOxC,EAAc,SAAG,GAAM,MAT5D,0DAYfyB,QAAQgB,MAAR,MAZe,QAcrBC,IAdqB,0DAAH,sDAiBdA,EAAgB,uCAAG,4BAAAd,EAAA,sEACQf,EAAagB,QAAQc,eAAeZ,OAD5C,OAEC,OADda,EADa,SAGfzC,EAAayC,GAHE,2CAAH,qDAOhBC,EAAmB,SAACtB,GACtBA,EAASuB,GAAG,mBAAmB,SAACC,GAC9B9B,EAAW8B,EAAS,IACpBtB,QAAQC,IAAI,uBAAyBqB,EAAS,OAGhDxB,EAASuB,GAAG,gBAAgB,SAAC3D,GAC3BsC,QAAQC,IAAI,aAAevC,GACvBA,GAAO,YAASC,OAAO,IAAIC,SAAS,MACtCiC,EAAQC,MAIZA,EAASuB,GAAG,cAAc,SAACL,GACzBnB,EAAQC,OAIRyB,EAAe,uCAAG,gCAAApB,EAAA,6DAClBH,QAAQC,IAAI,gCADM,SAEKL,EAAU4B,UAFf,cAEZ1B,EAFY,gBAIZA,EAAS2B,QAAQ,CACjBC,OAAQ,0BACRC,OAAQ,CAAC,eAEFnE,EAAQ,QARH,cAalB4D,EAAiBtB,GACX8B,EAAO,IAAIjD,IAAKmB,GAdJ,UAeK8B,EAAK7C,IAAI8C,cAfd,QAeZP,EAfY,OAgBlB9B,EAAW8B,EAAS,IACpBhC,EAAiB,IAAIsC,EAAK7C,IAAIC,SAASC,EAASC,IAAK,+CAjBnC,4CAAH,qDA7JR,4CAwLb,8BAAAiB,EAAA,kEAEqB,MAAXZ,EAFV,uBAGUmB,MAAM,yCAHhB,0CASuBrB,EATvB,cASWsB,EATX,gBAU2BA,EAAGP,QAAQ0B,2BAA2BxB,KAAK,CAACQ,KAAMvB,IAV7E,UAWoB,IADRwC,EAVZ,yBAYUrB,MAAM,yCAZhB,2BAa2B,GAAVqB,EAbjB,iBAcUrB,MAAM,4BAdhB,yCAgBiBC,EAAGP,QAAQ4B,UAAUnB,KAAK,CAACC,KAAMvB,IAhBlD,QAiBUW,IAjBV,0DAoBMQ,MAAM,EAAD,IACLV,QAAQgB,MAAR,MArBN,2DAxLa,sBAsNb,OApCAiB,qBAAU,WACVC,SAASC,MAAQ,iBACbjC,IACAe,MACD,IAiCD,sBAAKmB,UAAU,MAAf,UACI,sBAAMC,IAAI,aACJC,KAAK,uFAGX,iDAAmB,qBAAKC,IAAKC,OAE7B,gDAAkB,qBAAKD,IAAKC,IAA5B,KAA6C,sBAAMC,MAAO,CAAC,MAAQ,WAAtB,iBAA7C,4DAC0C,sBAAMA,MAAO,CAAC,MAAQ,WAAtB,6BAD1C,qPAKI,sBAAMA,MAAO,CAAC,MAAQ,WAAtB,oCALJ,OAKwE,8FACnD,oBAAGH,KAAMI,EAAKL,IAAI,sBAAsBM,OAAO,SAASF,MAAO,CAAC,MAAQ,UACzF,kBAAmB,QADF,wBACsB,mBAAGG,MAAM,wBAFoB,OAGpE,qGAAuE,mBAAGN,KAAK,uEAAuED,IAAI,sBAAsBM,OAAO,SAASF,MAAO,CAAC,MAAQ,UAAW,kBAAmB,QAAvK,qBAAvE,kBAC0B,uBAAMA,MAAO,CAAC,MAAS,WAAvB,eAAqC,sBAAMA,MAAO,CAAC,QAAW,QAAzB,gBAA2C,sBAAMA,MAAO,CAAC,QAAW,QAAzB,gBAA2C,sBAAMA,MAAO,CAAC,QAAW,QAAzB,gBAA2C,sBAAMA,MAAO,CAAC,QAAW,QAAzB,gBAA2C,sBAAMA,MAAO,CAAC,QAAW,QAAzB,gBAA2C,sBAAMA,MAAO,CAAC,QAAW,QAAzB,gBAA2C,sBAAMA,MAAO,CAAC,QAAW,OAAzB,gBACjU,wBAAQG,MAAM,cAAcC,QAtBzB,WACfC,UAAUC,UAAUC,UAAU,+CAqBlB,SAA6C,mBAAGJ,MAAM,4BAI1D,uDAEA,0BAASA,MAAM,YAAf,UACE,sBAAKA,MAAM,YAAX,UACI,qDAAuB,sBAAMH,MAAO,CAAC,MAAQ,WAAtB,oCAAvB,8DAC6C,sBAAMA,MAAO,CAAC,MAAQ,WAAtB,kBAD7C,WAES,mIAAyG,2HAG1G,iDAAmB,uBAAMA,MAAO,CAAC,MAAQ,WAAtB,UAAmCpE,EAAnC,UACP,MAAXkB,EAAkB,wBAAQqD,MAAM,UAAUC,QAtPlD,2CAsP0B,mBAA2D,yBAAQD,MAAM,UAAUC,QAAStB,EAAjC,qBAA0D,mBAAGqB,MAAM,kBAAnE,qBAGlG,qBAAKA,MAAM,aAAX,SAAwB,qBAAKL,IAAKU,SAGnC,2DACqB,0BAASL,MAAM,YAAf,UACE,sBAAKA,MAAM,YAAX,UACF,+RACE,kPACF,0HACY,MAAXrD,EACG,uBAAM2D,SAAU3C,EAAhB,UACI,sBAAMkC,MAAO,CAAC,MAAQ,WAAtB,0BADJ,IAC0D,uBAAOU,KAAK,SAASC,KAAK,MAAMC,IAAI,UAAUC,UAAQ,EAACC,SAAU,SAAC/C,GAAD,OAAWhC,EAAkBgC,EAAMmC,OAAO5B,UACjK,uBAAOoC,KAAK,SAASP,MAAM,UAAU7B,MAAM,cAE/C,yBAAQ6B,MAAM,UAAUC,QAAStB,EAAjC,qBAA0D,mBAAGqB,MAAM,kBAAnE,mBAIA,qBAAKA,MAAM,aAAX,SACI,cAACY,EAAA,EAAD,CAAKC,GAAI,CAACC,MAAO,OAAQC,OAAQ,IAAKC,SAAU,IAAKC,QAAS,cAAeC,OAAQ,oBAAqB,gBAAiB,OAA3H,SACsB,cAAC,IAAD,CACEH,OAAQ,IACRD,MAAO,IACPK,SAAU,YAAItF,GAAWuF,UACzBC,SAAU,IACVC,UAAWzF,EAAU0F,OALvB,SA/OhC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAEjBC,GAFoC,EAAZ7B,MAEjB2B,EAAKC,IACZE,EAAQC,IAAOC,KAAKH,EAAKC,MAAMG,OAAO,cACtCC,EAAiBL,EAAKM,OAAL,SAAe,GAAM,IAE5C,OACE,cAACC,EAAA,EAAD,CAAUpC,MAAO,CAAC,aAAc,MAAO,gBAAgB,QAAqBqC,UAAU,MAAMC,gBAAc,EAA1G,SACI,cAACC,EAAA,EAAD,CAAcC,QAAS,gCAAK,sBAAMxC,MAAO,CAAC,cAAe,OAAQ,MAAQ,UAAW,eAAgB,QAAxE,mBAA8F6B,EAAKY,MAAM,uBAA9G,IAAoH,sBAAMzC,MAAO,CAAC,cAAe,OAAQ,MAAQ,UAAW,eAAgB,OAAxE,oBAApH,IAAmNkC,EAAnN,OAAsO,uBAAK,sBAAMlC,MAAO,CAAC,cAAe,OAAQ,MAAQ,UAAW,eAAgB,QAAxE,kBAA3O,IAAyU8B,EAAK,oBAAI9B,MAAO,CAAC0C,MAAM,mBADtTd,aAqPzD,uCACA,sBAAK5B,MAAO,CAAC,YAAa,MAAO,cAAe,OAAhD,UACA,4BAAG,oBAAGA,MAAO,CAAC0C,MAAO,UAAW,kBAAmB,QAAS7C,KAAK,oCAA9D,UAAkG,mBAAGM,MAAM,iBAAiBH,MAAO,CAAC,MAAQ,aAA5I,oBACH,4BAAG,oBAAGA,MAAO,CAAC0C,MAAO,UAAW,kBAAmB,QAAS7C,KAAK,8BAA8BK,OAAO,SAASN,IAAI,sBAAhH,UAAsI,mBAAGO,MAAM,iBAAiBH,MAAO,CAAC,MAAQ,UAAW,YAAY,UAAvM,8BChSR2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKMQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAEP,cAAC,IAAMC,WAAP,UACM,cAAC,EAAD,MAENlE,SAASmE,eAAe,SDoHpB,kBAAmBvD,WACrBA,UAAUwD,cAAcC,MAAMhB,MAAK,SAAAiB,GACjCA,EAAaC,gBC1GnBrB,EAAgBpF,QAAQC,O","file":"static/js/main.01facac8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/document.1ce78936.pdf\";","export default __webpack_public_path__ + \"static/media/rainingeggplantsplain.0b6034ed.svg\";","export default __webpack_public_path__ + \"static/media/eggplantlogo.19b51d74.svg\";","import { useState, useEffect, useMemo, useCallback } from 'react'\n\nimport './App.css';\nimport Eggplant from \"./contracts/Eggplant.json\";\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport Moment from 'moment';\nimport Pdf from './document.pdf';\nimport rainingeggplants from './rainingeggplantsplain.svg';\nimport eggplantlogo from './eggplantlogo.svg';\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\n\nfunction App() {\n\nconst networks = {\n  bsc: {\n    chainId: `0x${Number(56).toString(16)}`,\n    chainName: \"Binance Smart Chain Mainnet\",\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\"\n    ],\n    blockExplorerUrls: [\"https://bscscan.com\"]\n  }\n};\n\n  const renderRow = ({ data, index, style }) => {\n\n      const item = data[index];\n      const date =  Moment.unix(item.date).format(\"YYYY-MM-DD\");\n      const adjustedAmount = item.amount / (10 ** 18);\n\n      return (\n        <ListItem style={{'margin-top': '8px', 'margin-bottom':'16px'}} key={index} component=\"div\" disablePadding>\n            <ListItemText primary={<div><span style={{'margin-left': '16px', 'color':'#50fa7b', 'margin-right': '18px'}}>Donor</span>{item.donor}<br/> <span style={{'margin-left': '16px', 'color':'#50fa7b', 'margin-right': '2px'}}>Amount</span> {adjustedAmount} BNB<br/><span style={{'margin-left': '16px', 'color':'#50fa7b', 'margin-right': '25px'}}>Date</span> {date}<hr style={{color:'#50fa7b'}}/></div>} />\n        </ListItem>\n      );\n  }\n\n\n  const getReadContract = () => {\n    const Web3 = require('web3');\n    const web3 = new Web3(new Web3.providers.HttpProvider(\"https://bsc-dataseed1.binance.org:443\"));\n\n    return new web3.eth.Contract(Eggplant.abi, '0x49430aea00c72d079022926f19326475fc853b87')\n  }\n\n\n  const getWeb3Modal = () => {\n   const providerOptions = {\n        theme: \"dark\"\n//        disableInjectedProvider: true\n          /* See Provider Options Section */\n   };\n\n//const providerOptions = {\n//  \"custom-binancechainwallet\": {\n//\n//    package: true,\n//    connector: async () => {\n//      let provider = null;\n//      if (typeof window.BinanceChain !== 'undefined') {\n//        provider = window.BinanceChain;\n//        try {\n//          await provider.request({ method: 'eth_requestAccounts' })\n//        } catch (error) {\n//          throw new Error(\"User Rejected\");\n//        }\n//      } else {\n//        throw new Error(\"No Binance Chain Wallet found\");\n//      }\n//      return provider;\n//    }\n//  }\n//};\n\n   const web3Modal = new Web3Modal({\n          providerOptions // required\n        });\n\n   return web3Modal;\n  }\n\n\n\n  const [nextAirdrop, setNextAirdrop] = useState(0);\n  const [donationAmount, setDonationAmount] = useState(0);\n  const [donations, setDonations] = useState([]);\n  const [readContract, setReadContract] = useState(getReadContract());\n  const [writeContract, setWriteContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [web3Modal, setWeb3Modal] = useState(getWeb3Modal());\n\n\n\n  const doClose = (provider) => {\n\n    if (provider.close) {\n      provider.close()\n    }\n    console.log('removed account')\n    setAccount(null)\n    setWriteContract(null)\n  }\n\n\n  const refreshNextAirdrop = async () => {\n    setNextAirdrop(await readContract.methods.getNextAirdrop().call() / (10 ** 18))\n  }\n\n\n  const submitDonation = async(event) => {\n    event.preventDefault();\n\n    if (account == null) {\n        alert('Connect to e-wallet to donate.');\n        return;\n    }\n    try {\n        const qq = await writeContract;\n        await qq.methods.donate().send({from: account, value: donationAmount * 10 ** 18 });\n\n    } catch(error) {\n          console.error(error);\n    }\n    refreshDonations()\n  }\n\n  const refreshDonations = async () => {\n        const newDonations = await readContract.methods.getDonations().call();\n        if (newDonations != null) {\n            setDonations(newDonations)\n        }\n  }\n\n  const setSubscriptions = (provider) => {\n      provider.on(\"accountsChanged\", (accounts: string[]) => {\n        setAccount(accounts[0]);\n        console.log('account switched to ' + accounts[0]);\n      });\n\n      provider.on(\"chainChanged\", (chainId: number) => {\n        console.log('chainId is' + chainId)\n        if (chainId != `0x${Number(56).toString(16)}`) {\n          doClose(provider);\n        }\n      });\n\n      provider.on(\"disconnect\", (error: { code: number; message: string }) => {\n        doClose(provider);\n      });\n  }\n\n  const connectToWallet = async () => {\n        console.log('connecting to write contract')\n        const provider = await web3Modal.connect();\n\n        await provider.request({\n              method: \"wallet_addEthereumChain\",\n              params: [\n                {\n                  ...networks['bsc']\n                }\n              ]\n            });\n\n        setSubscriptions(provider);\n        const web3 = new Web3(provider);\n        const accounts = await web3.eth.getAccounts();\n        setAccount(accounts[0]);\n        setWriteContract(new web3.eth.Contract(Eggplant.abi, '0x49430aea00c72d079022926f19326475fc853b87'))\n  }\n\n  // Init Loading\n  useEffect(() => {\n  document.title = 'Eggplant Token'\n      refreshNextAirdrop()\n      refreshDonations()\n  }, [])\n\n  async function airdrop() {\n    try {\n        if (account == null) {\n            alert('Connect to e-wallet to claim airdrop.');\n            return;\n        }\n\n\n\n       const qq  = await writeContract\n        const result = await qq.methods.checkAirdropAvailability().call({from: account});\n        if (result == 0) {\n            alert(\"Only one airdrop per user is allowed.\")\n        } else if (result == 1) {\n            alert(\"Airdrop supply is empty.\")\n        } else {\n             await qq.methods.airdrop().send({from: account});\n            refreshNextAirdrop();\n        }\n    } catch(error) {\n        alert(error);\n        console.error(error);\n    }\n\n    }\n\nconst doIItt = () => {\nnavigator.clipboard.writeText('0x49430aea00c72d079022926f19326475fc853b87');\n}\n\n  return (\n    <div className=\"App\">\n        <link rel=\"stylesheet\"\n              href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"/>\n\n\n        <h1>Eggplant Token <img src={eggplantlogo}/></h1>\n\n        <p>Eggplant Token <img src={eggplantlogo}/> (<span style={{'color':'#50fa7b'}}>EPT</span>) is a BEP-20 meme\n            token on the Binance Smart Chain with <span style={{'color':'#50fa7b'}}>zero token fees</span>. It has become all too common for meme\n            tokens\n            to include additional fees to those imposed by the Binance Blockchain and the team behind EPT finds that unfair. In\n            a bid to maximise user satisfaction EPT also introduces renewed tokenomics like\n            <span style={{'color':'#50fa7b'}}> self-service airdrops</span>.</p><p> These and the rest of EPT's tokenomics can\n            be read from the <a href={Pdf} rel=\"noopener noreferrer\" target=\"_blank\" style={{'color':'#50fa7b',\n            'text-decoration': 'none'}}>whitepaper <i class=\"fa fa-file-pdf-o\"></i></a>.</p>\n            <p>EPT's contract, source code and transaction history can be found in <a href='https://bscscan.com/token/0x49430aea00c72d079022926f19326475fc853b87' rel=\"noopener noreferrer\" target=\"_blank\" style={{'color':'#50fa7b', 'text-decoration': 'none'}}>\n            BscScan</a> under address <span style={{'color': '#50fa7b'}}>0x<span style={{'opacity': '0.90'}}>49</span><span style={{'opacity': '0.80'}}>43</span><span style={{'opacity': '0.70'}}>0a</span><span style={{'opacity': '0.60'}}>ea</span><span style={{'opacity': '0.50'}}>00</span><span style={{'opacity': '0.35'}}>c7</span><span style={{'opacity': '0.2'}}>2d</span>\n            <button class=\"copy-button\" onClick={doIItt}><i class=\"fa fa-clipboard\"></i></button>\n            </span></p>\n\n\n        <h2>Self-service Airdrops</h2>\n\n        <section class=\"container\">\n          <div class=\"left-half\">\n              <p>EPT has a dedicated <span style={{'color':'#50fa7b'}}>airdrop pool of tokens</span> from which first time\n                       users can acquire a small amount of <span style={{'color':'#50fa7b'}}>free</span> EPT.</p>\n                       <p>Each subsequent user gets a smaller amount of airdropped tokens until the airdrop pool is emptied.</p><p>The\n                       size of the airdrop pool and the airdrop payout scheme are detailed in the whitepaper.</p>\n\n                      <p>Next airdrop is <span style={{'color':'#50fa7b'}}>{nextAirdrop} EPT</span>\n                      {account != null ? <button class=\"button2\" onClick={airdrop}>Claim</button> : <button class=\"button2\" onClick={connectToWallet}>Connect <i class=\"fas fa-wallet\"></i> to claim</button> }\n              </p>\n  </div>\n  <div class=\"right-half\"><img src={rainingeggplants}/></div>\n</section>\n\n <h2>Supporting the developers</h2>\n                      <section class=\"container\">\n                        <div class=\"left-half\">\n                      <p>Creating and maintaining tokens is hard work. To maintain token communities alive devs often include fees in their tokenomics. By removing all token fees, users can be sure what they pay is what they get. However, this removes the main source of funding.</p>\n                        <p>If you'd like to support the developers you may consider donating. All donations are highly appreciated and will be used to support the development of future projects. Suggestions for improvements are welcome.</p>\n                      <p>Donations via this site are audited in the Donation Box to provide transparency to users.</p>\n                      {account != null ?\n                          <form onSubmit={submitDonation}>\n                              <span style={{'color':'#50fa7b'}}>Amount (BNB)</span> <input type=\"number\" step=\"any\" min='0.00001' required onChange={(event) => setDonationAmount(event.target.value)}/>\n                              <input type=\"submit\" class=\"button1\" value=\"Donate\"/>\n                          </form> :\n                          <button class=\"button2\" onClick={connectToWallet}>Connect <i class=\"fas fa-wallet\"></i> to donate</button>\n                      }\n\n                         </div>\n                          <div class=\"right-half\">\n                              <Box sx={{width: '100%', height: 320, maxWidth: 517, bgcolor: 'transparent', border: '2px solid #50fa7b', 'border-radius': '6px' }}>\n                                                    <FixedSizeList\n                                                      height={320}\n                                                      width={517}\n                                                      itemData={[...donations].reverse()}\n                                                      itemSize={100}\n                                                      itemCount={donations.length}>\n                                                      {renderRow}\n                                                    </FixedSizeList>\n                                                  </Box>\n\n\n                     </div>\n                   </section>\n                    <h3>About</h3>\n                    <div style={{'font-size': '90%', 'line-height': '0.9'}}>\n                    <p><a style={{color: '#f8f8f2', 'text-decoration': 'none'}} href=\"mailto:devedcrafts@protonmail.com\"><i class=\"fa fa-envelope\" style={{'color':'#50fa7b'}}></i> devedcrafts</a></p>\n                    <p><a style={{color: '#f8f8f2', 'text-decoration': 'none'}} href=\"https://t.me/eggplant_token\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fa fa-telegram\" style={{'color':'#50fa7b', 'font-size':'20px'}}></i> eggplant_token</a></p>\n                    </div>\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n        <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}